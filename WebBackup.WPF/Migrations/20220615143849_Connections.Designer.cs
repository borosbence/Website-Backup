// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBackup.WPF.Data;

#nullable disable

namespace WebBackup.WPF.Migrations
{
    [DbContext(typeof(WBContext))]
    [Migration("20220615143849_Connections")]
    partial class Connections
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("WebBackup.WPF.Models.FTPConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSSLEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteId")
                        .IsUnique();

                    b.ToTable("Ftp_Connections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hostname = "ftp.dlptest.com",
                            IsPassive = false,
                            IsSSLEnabled = false,
                            Password = "rNrKYTX9g7z3RgJRmxWuGHbeu",
                            Username = "dlpuser",
                            WebsiteId = 1
                        });
                });

            modelBuilder.Entity("WebBackup.WPF.Models.SQLConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Databasename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteId")
                        .IsUnique();

                    b.ToTable("Sql_Connections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Databasename = "test",
                            Hostname = "localhost",
                            Password = "",
                            Username = "root",
                            WebsiteId = 1
                        });
                });

            modelBuilder.Entity("WebBackup.WPF.Models.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Websites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TestSite1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestSite2"
                        });
                });

            modelBuilder.Entity("WebBackup.WPF.Models.FTPConnection", b =>
                {
                    b.HasOne("WebBackup.WPF.Models.Website", "Website")
                        .WithOne("FTPConnection")
                        .HasForeignKey("WebBackup.WPF.Models.FTPConnection", "WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Website");
                });

            modelBuilder.Entity("WebBackup.WPF.Models.SQLConnection", b =>
                {
                    b.HasOne("WebBackup.WPF.Models.Website", "Website")
                        .WithOne("SQLConnection")
                        .HasForeignKey("WebBackup.WPF.Models.SQLConnection", "WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Website");
                });

            modelBuilder.Entity("WebBackup.WPF.Models.Website", b =>
                {
                    b.Navigation("FTPConnection");

                    b.Navigation("SQLConnection");
                });
#pragma warning restore 612, 618
        }
    }
}
